{"version":3,"sources":["components/results/bananasplit.jpg","components/results/bananabread.jpg","components/results/bananapeel.jpg","components/results/banana.jpg","components/home.js","components/results/sure.js","components/results/final_result.js","components/questions/questions.js","components/questions/questionlist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","to","Button","variant","Sure","props","id","onClick","showResults","Result","answerArray","React","useState","h3","src","answer","setAnswer","useEffect","splitCount","counter","split","breadCount","bread","peelCount","peel","regularCount","regular","map","sort","a","b","Image","rounded","fluid","window","location","replace","Questions","questionNum","setQuestionNum","question_num","question_title","options","current_question","setCurrent_question","user_answers","setUser_answers","sure","setSure","show_final_result","setResults","optionItem","index","key","currentAnswers","option","App","exact","path","component","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de9739fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bananasplit.575292f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bananabread.9bac3c7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bananapeel.24d79001.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banana.3d9a6a39.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './BackgroundImagePage.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <>\r\n            <div className=\"bg\">\r\n                <div className=\"whatBanana\">\r\n                    <h5 className='animated fadeInUpBig delay-1s myAnimation'>What type of banana are you?</h5>\r\n                </div>\r\n                <div className=\"myButtonAnimation\">\r\n                    <Link to=\"/questions\">\r\n                        <Button className=\"startBut\" variant=\"dark\">\r\n                            Start Quiz\r\n                    </Button>\r\n                    </Link>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport '../questions/questions.css';\r\n\r\nexport default function Sure(props) {\r\n    const showResults = () => {\r\n        props.showResults();\r\n    }\r\n\r\n    return (\r\n        <div className=\"backBlue\">\r\n            <div className='yellowBox'>\r\n                <span id='resultReady'>\r\n                    <h1>Ready for your result?</h1>\r\n                </span>\r\n                <div className='sillyShake animated wobble'>\r\n                    <button id='readyButton'\r\n                        onClick={() => showResults()}>\r\n                        Yes!\r\n                    </button>\r\n                </div>\r\n            </div >\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image'\r\nimport '../questions/questions.css';\r\nimport split from './bananasplit.jpg';\r\nimport bread from './bananabread.jpg';\r\nimport peel from './bananapeel.jpg';\r\nimport regular from './banana.jpg';\r\n\r\n\r\nexport default function Result({ answerArray }) {\r\n    const [answer, setAnswer] = React.useState({ h3: '', src: '' });\r\n\r\n    React.useEffect(() => {\r\n        let splitCount = { counter: 0, h3: 'Banana Split', src: split };\r\n        let breadCount = { counter: 0, h3: 'Banana Bread', src: bread };\r\n        let peelCount = { counter: 0, h3: 'Banana Peel', src: peel };\r\n        let regularCount = { counter: 0, h3: 'Regular Banana', src: regular };\r\n\r\n        if (answerArray) {\r\n            answerArray.map((answer) => {\r\n                return answer === 'split' ?\r\n                    splitCount.counter += 1 :\r\n                    answer === 'bread' ?\r\n                        breadCount.counter += 1 :\r\n                        answer === 'peel' ?\r\n                            peelCount.counter += 1 :\r\n                            regularCount.counter += 1;\r\n            });\r\n            setAnswer([splitCount, breadCount, peelCount, regularCount].sort((a, b) => {\r\n                return b.counter - a.counter;\r\n            })[0]);\r\n        }\r\n    }, [answerArray])\r\n\r\n    return (\r\n        <main className=\"backBlue\">\r\n            <div className='yellowBox'>\r\n                <h4>You are a...</h4>\r\n                <h3>{answer.h3}</h3>\r\n                <Image src={answer.src} className=\"image\" rounded fluid />\r\n                <Button variant=\"dark\" onClick={() => { window.location.replace('questions') }}>Try again?</Button>\r\n            </div>\r\n        </main >\r\n\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './questions.css';\r\nimport Sure from '../results/sure';\r\nimport Result from '../results/final_result';\r\nimport questionList from './questionlist';\r\n\r\n\r\nexport default function Questions() {\r\n\r\n    const [questionNum, setQuestionNum] = useState(0);\r\n    const [current_question, setCurrent_question] = useState(questionList()[questionNum]);\r\n    const [user_answers, setUser_answers] = useState([]);\r\n    const [sure, setSure] = useState(false);\r\n    const [show_final_result, setResults] = useState(false);\r\n\r\n\r\n    const nextQuestion = () => {\r\n        if (questionNum < 7) {\r\n            setQuestionNum(questionNum + 1);\r\n        }\r\n        else {\r\n            setSure(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurrent_question(questionList()[questionNum]);\r\n    }, [questionNum])\r\n\r\n    const showFinalResult = () => {\r\n              setResults(true);\r\n        setSure(false);\r\n    }\r\n\r\n    if (sure) {\r\n        return <Sure showResults={showFinalResult} />;\r\n    }\r\n\r\n    else if (show_final_result) {\r\n        return <Result answerArray={user_answers} />;\r\n    }\r\n\r\n    else return (\r\n\r\n        //Background image\r\n        <main className=\"backBlue\" >\r\n\r\n            {/* Yellow box */}\r\n            < div className='yellowBox'>\r\n\r\n                {/* Question number */}\r\n                <h2>{current_question.question_num}</h2>\r\n\r\n                {/* Question */}\r\n                <h3 className=\"questionFont\">{current_question.question_title}</h3>\r\n\r\n                {/* options */}\r\n                {current_question.options.map((optionItem, index) => {\r\n                    const answer = optionItem.answer;\r\n                    return (\r\n                        <div key={index}>\r\n                            <button\r\n                                onClick={() => {\r\n                                    let currentAnswers = user_answers;\r\n                                    setUser_answers([...currentAnswers, answer]);\r\n                                    nextQuestion();\r\n                                }}\r\n                                className='buttonPadding'>\r\n                                <h1>{optionItem.option}</h1>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div >\r\n        </main>\r\n    )\r\n}","export default function questionList() {\r\n    return ([\r\n        {\r\n            question_num: 'Question One',\r\n            question_title: 'Pick a Colour:',\r\n            options: [{ 'option': 'White', 'answer': 'split' },\r\n            { 'option': 'Brown', 'answer': 'bread' },\r\n            { 'option': 'Yellow', 'answer': 'regular' },\r\n            { 'option': 'Black', 'answer': 'peel' },\r\n            ]\r\n        },\r\n        {\r\n            question_num: 'Question Two',\r\n            question_title: 'Pick a Consistency:',\r\n            options: [\r\n                { 'option': 'Mush', 'answer': 'peel' },\r\n                { 'option': 'Foam', 'answer': 'bread' },\r\n                { 'option': 'Cream', 'answer': 'split' },\r\n                { 'option': 'Banana', 'answer': 'regular' },]\r\n        },\r\n        {\r\n            question_num: 'Question Three',\r\n            question_title: 'Pick a Smell:',\r\n            options: [\r\n                { 'option': 'Fresh out the oven', 'answer': 'bread' },\r\n                { 'option': 'Sugar', 'answer': 'split' },\r\n                { 'option': 'Floor wax', 'answer': 'peel' },\r\n                { 'option': 'Banana', 'answer': 'regular' },]\r\n        },\r\n        {\r\n            question_num: 'Question Four',\r\n            question_title: 'Pick a Taste:',\r\n            options: [\r\n                { 'option': 'Sweet', 'answer': 'split' },\r\n                { 'option': 'Savoury', 'answer': 'bread' },\r\n                { 'option': 'Bitter', 'answer': 'peel' },\r\n                { 'option': 'Banana', 'answer': 'regular' },]\r\n        },\r\n        {\r\n            question_num: 'Question Five',\r\n            question_title: 'Pick an Interaction:',\r\n            options: [\r\n                { 'option': 'Slipping over', 'answer': 'peel' },\r\n                { 'option': 'Cutting a slice', 'answer': 'bread' },\r\n                { 'option': 'Scooping a spoonful', 'answer': 'split' },\r\n                { 'option': 'Peeling a banana', 'answer': 'regular' },\r\n            ]\r\n        },\r\n        {\r\n            question_num: 'Question Six',\r\n            question_title: 'Pick an Effect:',\r\n            options: [\r\n                { 'option': 'Brain freeze', 'answer': 'split' },\r\n                { 'option': 'being full', 'answer': 'bread' },\r\n                { 'option': 'Increased potassium', 'answer': 'regular' },\r\n                { 'option': 'Body pain', 'answer': 'peel' },\r\n            ]\r\n        },\r\n        {\r\n            question_num: 'Question Seven',\r\n            question_title: 'Pick an Occasion:',\r\n            options: [\r\n                { 'option': 'Birthday party', 'answer': 'split' },\r\n                { 'option': 'Brunch', 'answer': 'bread' },\r\n                { 'option': \"Not looking where you're going\", 'answer': 'peel' },\r\n                { 'option': 'Eating a banana', 'answer': 'regular' },\r\n            ]\r\n        },\r\n        {\r\n            question_num: 'Question Eight',\r\n            question_title: 'Pick a Response:',\r\n            options: [\r\n                { 'option': 'That was a good banana', 'answer': 'regular' },\r\n                { 'option': 'Yummy', 'answer': 'split' },\r\n                { 'option': \"Ooh, smells good!\", 'answer': 'bread' },\r\n                { 'option': 'Why me?', 'answer': 'peel' },\r\n            ]\r\n        }\r\n    ])\r\n}","import React from 'react';\r\nimport './components/BackgroundImagePage.css';\r\nimport Home from './components/home';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Questions from './components/questions/questions';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route path='/questions' component={Questions} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}